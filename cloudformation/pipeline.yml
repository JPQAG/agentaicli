AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for deploying the AgentAiCli Lambda CI/CD Pipeline.

Parameters:
  GitHubOwner:
    Type: String
    Description: GitHub repository owner
  GitHubRepo:
    Type: String
    Description: GitHub repository name
  GitHubBranch:
    Type: String
    Default: main
    Description: GitHub branch name
  GitHubToken:
    Type: String
    NoEcho: true
    Description: GitHub OAuth token
  BootstrapStackName:
    Type: String
    Description: Name of the bootstrap stack that created the Lambda code bucket
  IamStackName:
    Type: String
    Description: Name of the IAM stack that created the roles
  LambdaCodeBucket:
    Type: String
    Description: Name of the Lambda code bucket

Resources:
  CodeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-artifacts-${AWS::AccountId}
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            ExpirationInDays: 90

  AgentAiCliPackageProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: AgentAiCliPackageProject
      Description: Package Lambda function for AgentAiCli
      ServiceRole: !Sub arn:aws:iam::${AWS::AccountId}:role/${IamStackName}-build-role
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        EnvironmentVariables:
          - Name: CODE_BUCKET
            Value: !Ref LambdaCodeBucket
      Source:
        Type: CODEPIPELINE
        BuildSpec: ops/buildspec-package.yml
      Cache:
        Type: NO_CACHE

  AgentAiCliPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: AgentAiCliPipeline
      RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${IamStackName}-pipeline-role
      ArtifactStore:
        Type: S3
        Location: !Ref CodeBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
                PollForSourceChanges: false
        - Name: Package
          Actions:
            - Name: PackageLambda
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: PackageOutput
              Configuration:
                ProjectName: !Ref AgentAiCliPackageProject
                EnvironmentVariables: !Sub '[{"name":"CODE_BUCKET","value":"${LambdaCodeBucket}"}]'
        - Name: Deploy
          Actions:
            - Name: DeployLambda
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: PackageOutput
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: AgentAiCliLambdaStack
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: PackageOutput::cloudformation/AgentAiCliLambda.yml
                ParameterOverrides: !Sub '{"LambdaCodeBucket":"${LambdaCodeBucket}"}'

  GithubWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubToken
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: "refs/heads/main"
      TargetPipeline: !Ref AgentAiCliPipeline
      TargetAction: SourceAction
      Name: !Sub ${AWS::StackName}-webhook
      TargetPipelineVersion: !GetAtt AgentAiCliPipeline.Version
      RegisterWithThirdParty: true

Outputs:
  CodeBucketName:
    Description: Name of the S3 bucket for artifacts
    Value: !Ref CodeBucket
  LambdaCodeBucketName:
    Description: Name of the S3 bucket for Lambda code
    Value: !Ref LambdaCodeBucket 